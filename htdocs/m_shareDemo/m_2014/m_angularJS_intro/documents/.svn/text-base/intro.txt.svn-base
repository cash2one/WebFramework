<h3>AngularJS产生的背景故事</h3>
<pre>
关于Angular 的起源，我可以追溯到2009 年的Google Feedback项目。当时，对于项目的开发速度以及如何编写可测试代码的问题，我们已经经受了几个月的折磨。6个月时，我们开发了差不多17000 行前端代码。这时候，团队中的一个成员Misko Hevery做出了一个大胆的宣言：利用他自己业余时间所开发的一个开源库，他可以在两周之内把目前所有东西重写一遍。
我当时想，两周的时间并不会给我们造成太大的影响，同时我们也接受了Misko努力构建一些东西的想法。然而Misko最终还是估算错了时间，他用了三个星期。但是，我们所有人还是被他深深地震撼了，更让我们感到震撼的是，他所开发的新应用的代码量从原来的17000行压缩到了1500 行。看起来，Misko 的东西值得深入推广。Misko和我决定，围绕他所提倡的理念组建一个团队，这个简单的理念就是：简化对web开发者的经验要求。Shyam Seshadri，也就是本书的合著者，后来继续领导GoogleFeedback团队开发了第一款搭载Angular 的应用。
从那时起，我们在大家的指导下继续开发Angular。给予我们指导的人有的来自Google自己的团队，也有来自全球的数以百计的开源贡献者。数千名开发者在他们的日常工作中依赖Angular，并且发展成了一个优质的支持者网络。
-- 来自<<用AngularJS开发下一代Web应用>>
</pre>

<h3>简介</h3>
<pre>
AngularJS使用了不同的方法，它尝试去补足HTML本身在构建应用方面的缺陷。AngularJS通过使用我们称为标识符(directives)的结构，让浏览器能够识别新的语法。例如：
 使用双大括号{{}}语法进行数据绑定；
 使用DOM控制结构来实现迭代或者隐藏DOM片段；
 支持表单和表单的验证；
 能将逻辑代码关联到相关的DOM元素上；
 能将HTML分组成可重用的组件。

AngularJS试图成为WEB应用中的一种端对端的解决方案。这意味着它不只是你的WEB应用中的一个小部分，而是一个完整的端对端的解决方案。
 构建一个CRUD应用可能用到的全部内容包括：数据绑定、基本模板标识符、表单验证、路由、深度链接、组件重用、依赖注入。
 测试方面包括：单元测试、端对端测试、模拟和自动化测试框架。
 具有目录布局和测试脚本的种子应用作为起点。

AngularJS主要考虑的是构建CRUD应用。幸运的是，至少90%的WEB应用都是CRUD应用。
</pre>

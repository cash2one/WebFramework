<?xml version="1.0" encoding="UTF-8" ?>
<root>
    <db>
        <!-- your ldap -->
        <ldap>yinxj</ldap>

        <!-- product team -->
        <product>armani</product>

        <!-- child product -->
        <type>search</type>
    </db>
    <datas>
        <!-- 每个data最多只能配一个log和一个gcLogFile, 更多请放到新的data中 -->
        <data>
            <!-- service name, 如: nb092_ds. 若cubename不匹配"\w\w\d\d\d", 会自动在前面加上机器名, 如"cluster"->"nb092_cluster" -->
            <cubeName>cluster</cubeName>

            <logFile>
                <!-- 待监控的文件名 -->
                <!-- 仅能处理如下的log格式: 
                    time_pattern @@ANALYSIS@@ key1=value, key2=value
                    目前支持的time_pattern有: hh:mm:ss.sss, YYMMDD hhmmss, YYYY-MM-DD hh:mm:ss, MMDDhhmmss -->
                <!-- 监控日志, 请写fullPath, 如: /disk2/resin-3.0.21/log/stdout.log.@@%Y-%m-%d@@
                will replace @@time pattern@@ according to current date if contains "@@" and "@@"
                pattern见下: 
                    %Y :完整年(e.g.: 2013)
                    %y: 年后两位 [00,99]
                    %m: 月份 [01,12]
                    %d: 日期 [01,31]
                    %H: hour-24小时制[00,23]    %h: hour-12小时制[01,12]
                    %M: minute [01,59]
                    %S: second [01,59]      -->
                <fileName>/disk1/armani_ms/cluster/cluster/cluster.err</fileName>
                <!-- 时间间隔，默认30, 即对每30s的log做一次统计 -->
                <timeInterval>30</timeInterval>
                <!-- 待监控的整型key (目前不支持带有","的key), 多个key请用","分隔 -->
                <numberKeys>getByUrl.time,getById.time</numberKeys>
                <!-- 待监控的字符型key (目前不支持带有","的key), 多个key请用","分隔 -->
                <stringKeys>cluster.status</stringKeys>
            </logFile>

            <!-- java 进程的 gc 日志监控, 建议 java 进程的启动参数带上如下配置: 
            -Xloggc:<file> -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -->
            <gcLogFile>
                <!-- fileName配置方式同logFile -->
                <fileName>/disk1/armani_ms/cluster/cluster/cluster-armani.gc.log</fileName>
                <!-- 时间间隔，默认600, 即对每600s的log做一次统计, 建议用默认或更大值 -->
                <timeInterval>600</timeInterval>
            </gcLogFile>

            <!-- 进程资源监控 (cpu, mem): 若不做监控, 将alias设为空即可, 说明:
                1. 若要监控多个进程, 可如下配置:
                    1.1 在processes下配多个process
                    1.2 在一个process中指定多个待监控进程, 并在alias中配置多个别名, 用","分隔, 并 (用pid指定时请在pid中配置多个, 用","分隔)
                2. 每个process请至少用pid, processPath, regPattern中的一个来指定:
                    2.1 若使用pid指定, 则regPattern及processPath的配置无效 (不推荐按此配置, 否则服务重启导致pid改变后无法继续监控), 将对pid指定的进程做监控
                    2.2 若仅使用regPattern指定 (在CDATA[]的[]中配置正则表达式), 则会监控命令"ps xu"输出中, command项匹配regPattern的进程
                        例: 进程的command为java -Xmx256m -cp lib/*:build/classes outfox.yinxj.svncheck.LogUpdate, 则可配置为: outfox.*Logupdate
                    2.3 若仅使用processPath (进程的启动路径或父路径) 来指定, 则会监控/proc/${pid}/cwd指向的路径包含processPath的所有pid (不推荐, 因为可能会匹配到多个进程)
                    2.4 (推荐方式) 若regPattern及processPath均指定, 则仅会监控同时满足2.2及2.3条件的进程
                3. 监控条件: 满足监控条件的进程数 <= 配置的alias数 (<时会用前几个alias)
                   若不满足监控条件, 则不对进程做监控. 当满足监控条件时, 会继续监控
             -->
            <processes>
                <!-- 时间间隔，默认10, 即每10s取一次进程占用的系统资源 -->
                <timeInterval>10</timeInterval>
                <!-- 推荐用regPattern及processPath配置 -->
                <process>
                    <alias>ds</alias>
                    <regPattern><![CDATA[cluster]]></regPattern>
                    <processPath>/disk1/armani_ms/cluster/cluster</processPath>
                    <pid></pid>
                </process>
            </processes>
        </data>
    </datas>
</root>
